
//Function definitions
function onlyUnique(value, index, self) {
  return self.indexOf(value) === index;
}

function getlength(number) {
    return number.toString().length;
}

function search(dayKey, strikeKey, myArray){
    for (var i=0; i < myArray.length; i++) {
        if (myArray[i].days === dayKey && myArray[i].strike === strikeKey ) {
            return myArray[i];
        }
    }
}

function colorcell(num){
		
		
		var roundedValue = Math.round(num / 5) * 5;
		
		
		if (num>0)
		{
			return "prof" + String(Math.min(roundedValue,200));
		}
		else
		{
			return "prof" + String(Math.max(roundedValue,-100));
		}
}

function get_td(resultObject){
	var color_class = colorcell(resultObject.results.profit_perc)
	var f_class = ""
	if (getlength(resultObject.results.profit)===4){
		f_class = "four_digit"
	}
	//Create TD elements with values, tooltips, color classes etc.
	return "<td title='" + resultObject.results.profit_perc  + "% Buy Price: " + resultObject.results.buy_p + " Sell Price:" + resultObject.results.sell_p   +  "' class='tooltip-test " + f_class + " " +  color_class + "' >" + resultObject.results.profit + "</td>"
}






$('#exampleModal').modal('show');


//Remove existing elements
$("#roiviz_tablehead").empty(); 
$("#roiviz_tablebody").empty(); 


//Initialize variables
var current_quote = '<%= escape_javascript( @current_quote ) %>'
//var pg = <%= escape_javascript( @price_grid ) %>

var pg = <%= raw json_escape(@price_grid.to_json) %>;


var days = <%= escape_javascript( @days ) %>
var labeled_months = <%= raw json_escape(@labeled_months.to_json) %>
var labeled_dates = <%= raw json_escape(@labeled_dates.to_json) %>
var strikes = <%= escape_javascript( @strikes ) %>
var q = <%= escape_javascript( @current_quote ) %>
strikes = strikes.reverse()
strikes = strikes.filter(onlyUnique);

//get closet element to current price in strikes array 
	var counts = strikes;
	var goal = q;

	var closest = counts.reduce(function(prev, curr) {
	  return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);
	});


//Decide how many days columns to show based on screen size and array size
var days_step = 1
var column_threshold = 15
if ($( document ).width() <= 380 )
{
	column_threshold = 5
}
if ($( document ).width() > 370 && $( document ).width() < 990 )
{
	column_threshold = 8
}

if (days.length > column_threshold)
{
	days_step = Math.ceil(days.length / column_threshold)
}


// Set up header rows for labeled months
html = "<tr id='labeled_months_row'><th></th></tr>"
th_html_months = ""
$(html).appendTo('#roiviz_tablehead') ;


// Set up header rows for labeled dates
html = "<tr id='labeled_dates_row'><th></th></tr>"
th_html_days = ""
$(html).appendTo('#roiviz_tablehead') ;

var _months = []

//Iterate over days
//for(i=(days.length-1); i>=0; i = i - days_step)
for(i=0; i<days.length; i = i + days_step)
{
	th_html_days += "<th align='center'>" + labeled_dates[i] + "</th>"
	_months.push(labeled_months[i])
	//th_html_months += "<th>" + labeled_months[i] + "</th>"
}

if (i!==days.length-1)
{
	th_html_days += "<th>Exp</th>"
}
th_html_days += "<th>+/-%</th>"

//Add labeled dates as headers to table
$(th_html_days).appendTo('#labeled_dates_row') ;

//Add labeled months as headers to table
var count_months, shading;
shading = 1;
count_months = _months.reduce((a, c) => (a[c] = (a[c] || 0) + 1, a), Object.create(null));
var _result = Object.entries(count_months); 
for (j = 0; j < _result.length; j++)
{
	th_html_months += "<th colspan='" + _result[j][1] + "' class='z" + shading + "' align='center'>" + _result[j][0]  + "</th>"
	if (shading===1) 
		{shading=2}
	else
		{shading=1}
}

$(th_html_months).appendTo('#labeled_months_row') ;







var tr_html_strikes = ""
//Iterate over strikes
for(i=0; i<strikes.length; i++)
{
	

	var td_html_profit = ""
	var color_class = ""

	//Iterate over days with days_step
	for(k=(days.length-1); k>=0; k= k - days_step)
	{
		//Create TD elements with values, tooltips, color classes etc.
		td_html_profit += get_td(search(k, strikes[i], pg));
	}
	if(k!==0)
	{
		td_html_profit += get_td(search(0, strikes[i], pg));
	}
	var s = search(0, strikes[i], pg)
	td_html_profit += "<td class='pct'>" + s.results.upside_perc + "%</td>"

	var curr_price_class = ""
	if (String(closest)===String(strikes[i])){ curr_price_class="curPriceAbove" };
	tr_html_strikes = "<tr id='" + strikes[i] + "' class='" + curr_price_class  + "'><th>" + strikes[i] + "</th>" + td_html_profit + "</tr>"
	$(tr_html_strikes).appendTo('#roiviz_tablebody') ;


	//console.log(td_html_profit)
	//$(td_html_profit).appendTo('#' + String(strikes[i])) ;

}

$("#roiviz_table td").addClass("small_text");
$("#roiviz_table th").addClass("small_text");


